name: Release on GitHub & PyPI

on:
  push:

jobs:
  build_wheels:
    name: "Build ${{ matrix.build }} wheels on ${{ matrix.os }} ${{ matrix.arch }}"
    runs-on: "${{ matrix.os }}-latest"
    strategy:
      matrix:
        os: ["macos"]
        arch: ["x86_64"]
        build: ["cp311-*"]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - run: /Applications/Xcode_14.2.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc --version
      - run: which gfortran-12
      - run: python -m pip install -U pip
      - run: python -m pip install cibuildwheel
      - run: touch setup.py
      - run: python -m cibuildwheel --output-dir wh
        env:
          CIBW_BUILD: ${{ matrix.build }}
          CIBW_ARCHS: ${{ matrix.arch }}
          CIBW_MANYLINUX_X86_64_IMAGE: "quay.io/pypa/manylinux2014_x86_64"
          CIBW_MANYLINUX_PYPY_X86_64_IMAGE: "quay.io/pypa/manylinux2014_x86_64"
          CIBW_MANYLINUX_AARCH64_IMAGE: "quay.io/pypa/manylinux_2_28_aarch64"
          CIBW_REPAIR_WHEEL_COMMAND: ""
          CMAKE_Fortran_COMPILER: "gfortran-12"
      - uses: actions/upload-artifact@v3
        with:
          path: wh
  release:
    needs: ["build_wheels"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - uses: actions/download-artifact@v3
      - run: python -m pip install twine
      - run: python -m twine upload -u __token__ -p "${{ secrets.PYPI_TOKEN }}" artifact/*
      - run: echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      - run: gh release create -t "Release ${{ env.TAG}}" "${{ env.TAG }}" artifact/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
