name: Release on GitHub & PyPI

on:
  push:
    tags:
      - "v*"

jobs:
  build_wheels:
    name: "Build ${{ matrix.build }} wheels on ${{ matrix.os }} ${{ matrix.arch }}"
    runs-on: "${{ matrix.os }}-latest"
    strategy:
      matrix:
        os: ["ubuntu", "macos"]
        arch: ["x86_64"]
        include:
          - arch: "aarch64"
            os: "ubuntu"
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Set up QEMU
        if: matrix.arch == 'aarch64'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all
      - run: python -m pip install -U pip
      - run: echo "FC=gfortran-12" >> $GITHUB_ENV
        if: matrix.os == 'macos'
      - run: sed -i.bak 's/++=ON/++=OFF/g' pyproject.toml
        if: matrix.os == 'macos'
      - run: python -m pip wheel -vw wh .
      - uses: actions/upload-artifact@v3
        with:
          path: wh
  release:
    needs: ["build_wheels"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - uses: actions/download-artifact@v3
      - run: python -m pip install twine
      - run: python -m twine upload -u __token__ -p "${{ secrets.PYPI_TOKEN }}" artifact/cmeel_lapack*.whl
      - run: echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      - run: gh release create -t "Release ${{ env.TAG}}" "${{ env.TAG }}" artifact/cmeel_lapack*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
